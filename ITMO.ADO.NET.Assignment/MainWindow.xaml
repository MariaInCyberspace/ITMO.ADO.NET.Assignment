<Window x:Class="ITMO.ADO.NET.Assignment.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ITMO.ADO.NET.Assignment"
        mc:Ignorable="d"
        Title="MainWindow" Height="700" Width="915" MinHeight="700" MinWidth="915" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="customersViewSource" d:DesignSource="{d:DesignInstance {x:Type local:Customers}, CreateList=True}"/>
        <CollectionViewSource x:Key="customersOrdersViewSource" Source="{Binding Orders, Source={StaticResource customersViewSource}}"/>

        <Style x:Key="StackPanelButton" TargetType="Button" BasedOn="{x:Null}">
            <Setter Property="Height" Value="35"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="gray"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="5" Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center"  VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        
        <Style x:Key="Label" TargetType="{x:Type Label}" BasedOn="{x:Null}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="120"/>
        </Style>

        <Style x:Key="TextBox" TargetType="{x:Type TextBox}" BasedOn="{x:Null}">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Background" Value="LightYellow"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="170"/>
        </Style>

        <RoutedUICommand x:Key="GoToPreviousEntryCommand" Text="Previous Entry"/>
        <RoutedUICommand x:Key="GoToNextEntryCommand" Text="Next Entry"/>
        <RoutedUICommand x:Key="DeleteCustomerCommand" Text="Delete Customer"/>
        <RoutedUICommand x:Key="DeleteOrderCommand" Text="Delete Order"/>
        <RoutedUICommand x:Key="UpdateCommand" Text="Update"/>
        <RoutedUICommand x:Key="AddCustomerCommand" Text="Add Customer"/>
        <RoutedUICommand x:Key="CancelCommand" Text="Cancel"/>
    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding x:Name="GoToPreviousEntryCommand" Command="{StaticResource GoToPreviousEntryCommand}" Executed="GoToPreviousEntryCommand_Executed"/>
        <CommandBinding x:Name="GoToNextEntryCommand" Command="{StaticResource GoToNextEntryCommand}" Executed="GoToNextEntryCommand_Executed"/>
        <CommandBinding x:Name="DeleteCustomerCommand" Command="{StaticResource DeleteCustomerCommand}" Executed="DeleteCustomerCommand_Executed"/>
        <CommandBinding x:Name="DeleteOrderCommand" Command="{StaticResource DeleteOrderCommand}" Executed="DeleteOrderCommand_Executed"/>
        <CommandBinding x:Name="UpdateCommand" Command="{StaticResource UpdateCommand}" Executed="UpdateCommand_Executed"/>
        <CommandBinding x:Name="AddCustomerCommand" Command="{StaticResource AddCustomerCommand}" Executed="AddCustomerCommand_Executed"/>
        <CommandBinding x:Name="CancelCommand" Command="{StaticResource CancelCommand}" Executed="CancelCommand_Executed"/>
    </Window.CommandBindings>



    <Grid DataContext="{StaticResource customersOrdersViewSource}">
       
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Top" Grid.Row="0" Height="50" Background="BlanchedAlmond" DataContext="{StaticResource customersViewSource}" Grid.ColumnSpan="2" Margin="0,0,-0.2,0" Grid.RowSpan="3" >
            <Button x:Name="goToPreviousButton" Content="Previous Entry" Command="{StaticResource GoToPreviousEntryCommand}" Style="{StaticResource StackPanelButton}"/>
            <Button x:Name="goToNextButton" Content="Next Entry" Command="{StaticResource GoToNextEntryCommand}" Style="{StaticResource StackPanelButton}"/>
            <Button x:Name="deleteCustomerButton" Content="Delete Customer" Command="{StaticResource DeleteCustomerCommand}" Style="{StaticResource StackPanelButton}"/>
            <Button x:Name="deleteOrderButton" Content="Delete Order" Command="{StaticResource DeleteOrderCommand}" Style="{StaticResource StackPanelButton}"/>
            <Button x:Name="updateButton" Content="Update" Command="{StaticResource UpdateCommand}" Style="{StaticResource StackPanelButton}"/>
            <Button x:Name="addCustomerButton" Content="Add Customer" Command="{StaticResource AddCustomerCommand}" Style="{StaticResource StackPanelButton}"/>
            <Button x:Name="addOrderButton" Content="Add Order" Click="addOrderButton_Click" Style="{StaticResource StackPanelButton}"/>
        </StackPanel>

        <Grid x:Name="customersGrid" DataContext="{StaticResource customersViewSource}" Grid.Row="1" HorizontalAlignment="Stretch" Margin="1,77,-1.2,372.4" Grid.RowSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Content="Address:" Grid.Column="0" Grid.Row="0" Style="{StaticResource Label}"/>
            <TextBox x:Name="addressTextBox" Grid.Column="1" Grid.Row="0" Text="{Binding Address, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource TextBox}"/>
            <Label Content="City:" Grid.Column="0" Grid.Row="1" Style="{StaticResource Label}"/>
            <TextBox x:Name="cityTextBox" Grid.Column="1" Grid.Row="1" Text="{Binding City, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource TextBox}"/>
            <Label Content="Company Name:" Grid.Column="0" Grid.Row="2" Style="{StaticResource Label}"/>
            <TextBox x:Name="companyNameTextBox" Grid.Column="1" Grid.Row="2" Text="{Binding CompanyName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource TextBox}"/>
            <Label Content="Contact Name:" Grid.Column="0" Grid.Row="3" Style="{StaticResource Label}"/>
            <TextBox x:Name="contactNameTextBox" Grid.Column="1" Grid.Row="3" Text="{Binding ContactName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource TextBox}"/>
            <Label Content="Contact Title:" Grid.Column="0" Grid.Row="4" Style="{StaticResource Label}"/>
            <TextBox x:Name="contactTitleTextBox" Grid.Column="1" Grid.Row="4" Text="{Binding ContactTitle, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource TextBox}"/>
            <Label Content="Country:" Grid.Column="0" Grid.Row="5" Style="{StaticResource Label}"/>
            <TextBox x:Name="countryTextBox" Grid.Column="1" Grid.Row="5" Text="{Binding Country, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource TextBox}"/>
            <Label Content="Customer ID:" Grid.Column="3" Grid.Row="0" Style="{StaticResource Label}"/>
            <TextBox x:Name="customerIDTextBox" Grid.Column="4" Grid.Row="0" Text="{Binding CustomerID, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource TextBox}"/>
            <Label Content="Fax:" Grid.Column="3" Grid.Row="1" Style="{StaticResource Label}"/>
            <TextBox x:Name="faxTextBox" Grid.Column="4" Grid.Row="1" Text="{Binding Fax, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource TextBox}"/>
            <Label Content="Phone:" Grid.Column="3" Grid.Row="2" Style="{StaticResource Label}"/>
            <TextBox x:Name="phoneTextBox" Grid.Column="4" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Phone, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource TextBox}"/>
            <Label Content="Postal Code:" Grid.Column="3" Grid.Row="3" Style="{StaticResource Label}"/>
            <TextBox x:Name="postalCodeTextBox" Grid.Column="4" Grid.Row="3" Text="{Binding PostalCode, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource TextBox}"/>
            <Label Content="Region:" Grid.Column="3" Grid.Row="4" Style="{StaticResource Label}"/>
            <TextBox x:Name="regionTextBox" Grid.Column="4" Grid.Row="4" Text="{Binding Region, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource TextBox}"/>
        </Grid>

        <Grid x:Name="addNewCustomerGrid" Visibility="Collapsed" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Top" DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=addNewCustomer, UpdateSourceTrigger=Explicit}" Margin="0,77,-0.2,0" Grid.RowSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Content="Address:" Grid.Column="0" Grid.Row="0" Style="{StaticResource Label}"/>
            <TextBox x:Name="newAddressTextBox" Grid.Column="1" Grid.Row="0" Text="{Binding Address, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource TextBox}"/>
            <Label Content="City:" Grid.Column="0" Grid.Row="1" Style="{StaticResource Label}"/>
            <TextBox x:Name="newCityTextBox" Grid.Column="1" Grid.Row="1" Text="{Binding City, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource TextBox}"/>
            <Label Content="Company Name:" Grid.Column="0" Grid.Row="2" Style="{StaticResource Label}"/>
            <TextBox x:Name="newCompanyNameTextBox" Grid.Column="1" Grid.Row="2" Text="{Binding CompanyName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource TextBox}"/>
            <Label Content="Contact Name:" Grid.Column="0" Grid.Row="3" Style="{StaticResource Label}"/>
            <TextBox x:Name="newContactNameTextBox" Grid.Column="1" Grid.Row="3" Text="{Binding ContactName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource TextBox}"/>
            <Label Content="Contact Title:" Grid.Column="0" Grid.Row="4" Style="{StaticResource Label}"/>
            <TextBox x:Name="newContactTitleTextBox" Grid.Column="1" Grid.Row="4" Text="{Binding ContactTitle, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource TextBox}"/>
            <Label Content="Country:" Grid.Column="0" Grid.Row="5" Style="{StaticResource Label}"/>
            <TextBox x:Name="newCountryTextBox" Grid.Column="1" Grid.Row="5" Text="{Binding Country, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource TextBox}"/>
            <Label Content="Customer ID:" Grid.Column="3" Grid.Row="0" Style="{StaticResource Label}"/>
            <TextBox x:Name="newCustomerIDTextBox" Grid.Column="4" Grid.Row="0" Text="{Binding CustomerID, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource TextBox}"/>
            <Label Content="Fax:" Grid.Column="3" Grid.Row="1" Style="{StaticResource Label}"/>
            <TextBox x:Name="newFaxTextBox" Grid.Column="4" Grid.Row="1" Text="{Binding Fax, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource TextBox}"/>
            <Label Content="Phone:" Grid.Column="3" Grid.Row="2" Style="{StaticResource Label}"/>
            <TextBox x:Name="newPhoneTextBox" Grid.Column="4" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Phone, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource TextBox}"/>
            <Label Content="Postal Code:" Grid.Column="3" Grid.Row="3" Style="{StaticResource Label}"/>
            <TextBox x:Name="newPostalCodeTextBox" Grid.Column="4" Grid.Row="3" Text="{Binding PostalCode, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource TextBox}"/>
            <Label Content="Region:" Grid.Column="3" Grid.Row="4" Style="{StaticResource Label}"/>
            <TextBox x:Name="newRegionTextBox" Grid.Column="4" Grid.Row="4" Text="{Binding Region, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource TextBox}"/>
            <Button x:Name="cancelCustomerButton" Grid.Column="4" Grid.Row="5" Content="Cancel" Command="{StaticResource CancelCommand}" BorderBrush="AntiqueWhite" BorderThickness="3" Background="White" Foreground="Gray"/>
        </Grid>

        <DataGrid x:Name="ordersDataGrid" HorizontalAlignment="Left" VerticalAlignment="Bottom" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="0,0,-1.2,10.4" Grid.RowSpan="1" Grid.Row="2" RowDetailsVisibilityMode="VisibleWhenSelected" RowBackground="LightYellow" AlternatingRowBackground="BlanchedAlmond" Width="910" Height="333">
            <DataGrid.Columns>
                <DataGridTextColumn x:Name="customerIDColumn" Foreground="DarkSlateGray" Binding="{Binding CustomerID}" Header="Customer ID" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="employeeIDColumn" Binding="{Binding EmployeeID}" Header="Employee ID" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="freightColumn" Binding="{Binding Freight}" Header="Freight" Width="SizeToHeader"/>
                <DataGridTemplateColumn x:Name="orderDateColumn" Header="Order Date" Width="SizeToHeader">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding OrderDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn x:Name="orderIDColumn" Foreground="DarkSlateGray" Binding="{Binding OrderID}" Header="Order ID" Width="SizeToHeader"/>
                <DataGridTemplateColumn x:Name="requiredDateColumn" Header="Required Date" Width="SizeToHeader">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding RequiredDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn x:Name="shipAddressColumn" Foreground="DarkSlateGray" Binding="{Binding ShipAddress}" Header="Ship Address" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="shipCityColumn" Foreground="DarkSlateGray" Binding="{Binding ShipCity}" Header="Ship City" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="shipCountryColumn" Foreground="DarkSlateGray" Binding="{Binding ShipCountry}" Header="Ship Country" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="shipNameColumn" Foreground="DarkSlateGray" Binding="{Binding ShipName}" Header="Ship Name" Width="SizeToHeader"/>
                <DataGridTemplateColumn x:Name="shippedDateColumn" Header="Shipped Date" Width="SizeToHeader">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding ShippedDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn x:Name="shipPostalCodeColumn" Foreground="DarkSlateGray" Binding="{Binding ShipPostalCode}" Header="Ship Postal Code" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="shipRegionColumn" Foreground="DarkSlateGray" Binding="{Binding ShipRegion}" Header="Ship Region" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="shipViaColumn" Foreground="DarkSlateGray" Binding="{Binding ShipVia}" Header="Ship Via" Width="SizeToHeader"/>
            </DataGrid.Columns>
        </DataGrid>
        
        <Grid x:Name="addNewOrderGrid" Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="11,77,-1.2,0" DataContext="{Binding Path=newOrder, Mode=TwoWay}" Visibility="Collapsed">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Content="Employee ID" Grid.Row="0" Grid.Column="0" Style="{StaticResource Label}"/>
            <TextBox x:Name="newOrderEmployeeID" Grid.Row="0" Grid.Column="1" Style="{StaticResource TextBox}" Text="{Binding EmployeeID, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
            <Label Content="Order Date:"  Grid.Row="1" Grid.Column="0" Style="{StaticResource Label}"/>
            <DatePicker x:Name="newOrderDatePicker" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" Width="120"
                 SelectedDate="{Binding OrderDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="Required Date:" Grid.Row="2" Grid.Column="0" Style="{StaticResource Label}"/>
            <DatePicker x:Name="newOrderRequiredDatePicker" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right" Width="120"
                  SelectedDate="{Binding RequiredDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="Shipped Date:"  Grid.Row="3" Grid.Column="0" Style="{StaticResource Label}"/>
            <DatePicker x:Name="newOrderShippedDatePicker"  Grid.Row="3" Grid.Column="1" HorizontalAlignment="Right" Width="120"
                 SelectedDate="{Binding ShippedDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="Ship Via:"  Grid.Row="4" Grid.Column="0" Style="{StaticResource Label}"/>
            <TextBox x:Name="newOrderShipViaTextBox"  Grid.Row="4" Grid.Column="1" Style="{StaticResource TextBox}"
                  Text="{Binding ShipVia, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
            <Label Content="Freight"  Grid.Row="5" Grid.Column="0" Style="{StaticResource Label}"/>
            <TextBox x:Name="newOrderFreightTextBox" Grid.Row="5" Grid.Column="1" Style="{StaticResource TextBox}"
                  Text="{Binding Freight, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
            <Button x:Name="cancelOrderButton" Grid.Column="1" Grid.Row="6" Content="Cancel" Command="{StaticResource CancelCommand}" BorderBrush="AntiqueWhite" BorderThickness="3" Background="White" Foreground="Gray"/>
        </Grid>
    </Grid>

</Window>
